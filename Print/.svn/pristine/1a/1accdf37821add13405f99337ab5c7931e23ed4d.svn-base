package com.vjiazhi.shuiyinwang.splash;

import u.upd.l;

import com.vjiazhi.shuiyinwang.ui.ImgMainActivity;
import com.vjiazhi.shuiyinwang.ui.multi_image.bean.GetImageFolderSingleInstance;
import com.vjiazhi.shuiyinwang.utils.L;
import com.vjiazhi.shuiyinwang.utils.MyConfig;
import com.vjiazhi.yinji.R;
import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;

public class SplashActivity extends Activity {

	private static final long DELAY_TIME = 2000L;

	Handler mHander = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			// TODO Auto-generated method stub
			super.handleMessage(msg);
			goToMainActivity();
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_splash);
		checkVersion();
	}

	public void checkVersion() {
		new Thread(new Runnable() {
			@Override
			public void run() {
				try {
					int currentVersion = getVersionCode();
					int oldVersionCode = MyConfig
							.getNewVersionCode(SplashActivity.this);
					if (currentVersion > oldVersionCode) {
						MyConfig.setNewVersion(SplashActivity.this,
								currentVersion);
						InitData(1);
					} else {
						InitData(0);
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}).start();
	}

	public void InitData(int flag) {
		if (flag == 0) {
			GetImageFolderSingleInstance.Instance(SplashActivity.this);
			boolean myflag = false;
			while (!myflag) {
				SystemClock.sleep(DELAY_TIME);
				myflag = GetImageFolderSingleInstance.Instance(
						SplashActivity.this).getFinishFlag();
			}
			long wasteTime = GetImageFolderSingleInstance.Instance(
					SplashActivity.this).getWsateTime();
			if (wasteTime >= DELAY_TIME) {
				mHander.sendMessageDelayed(new Message(), 0L);
			} else {
				mHander.sendMessageDelayed(new Message(), DELAY_TIME
						- wasteTime);
			}

		} else {
			redirectByTime();
		}
	}

	private void goToMainActivity() {
		startActivity(new Intent(SplashActivity.this, ImgMainActivity.class));
		finish();
	}

	private void redirectByTime() {
		new Handler().postDelayed(new Runnable() {
			@Override
			public void run() {
				startActivity(new Intent(SplashActivity.this,
						ViewPagerActivity.class));
				finish();
			}
		}, DELAY_TIME);
	}

	private int getVersionCode() throws Exception {
		PackageManager packageManager = getPackageManager();
		PackageInfo packInfo = packageManager.getPackageInfo(getPackageName(),
				0);
		return packInfo.versionCode;
	}
}
